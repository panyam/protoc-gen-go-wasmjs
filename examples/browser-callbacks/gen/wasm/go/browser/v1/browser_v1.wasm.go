//go:build js && wasm
// +build js,wasm

// Code generated by protoc-gen-go-wasmjs. DO NOT EDIT.
// source: browser/v1/browser.proto

package browser_example

import (
	"context"
	"fmt"
	"syscall/js"

	browserv1 "github.com/panyam/protoc-gen-go-wasmjs/examples/browser-callbacks/gen/go/browser/v1"
	wasm "github.com/panyam/protoc-gen-go-wasmjs/pkg/wasm"
)

// Browser_v1ServicesExports provides WASM exports for dependency injection
type Browser_v1ServicesExports struct {

	// Browser-provided services (clients)
	BrowserAPI *BrowserAPIClient
}

// RegisterAPI registers the services with the JavaScript global namespace
func (exports *Browser_v1ServicesExports) RegisterAPI() {
	fmt.Println("browser_example WASM module loading...")

	// Initialize browser channel for browser-provided services
	_ = wasm.GetBrowserChannel()
	// Create namespaced API structure
	browserExample := map[string]interface{}{}
	js.Global().Set("browserExample", js.ValueOf(browserExample))

	fmt.Println("browser_example WASM module loaded successfully")
}

// =============================================================================
// WASM API Functions - Generated Method Wrappers
// =============================================================================

// =============================================================================
// Helper Functions
// =============================================================================

// createJSResponse is a wrapper for the library function
func createJSResponse(success bool, message string, data any) any {
	return wasm.CreateJSResponse(success, message, data)
}

// =============================================================================
// Browser Service Client Implementations
// =============================================================================

// BrowserAPIClient is a client for the browser-provided BrowserAPI service
type BrowserAPIClient struct {
	channel *wasm.BrowserServiceChannel
}

// NewBrowserAPIClient creates a new client for the browser-provided BrowserAPI service
func NewBrowserAPIClient() *BrowserAPIClient {
	return &BrowserAPIClient{
		channel: wasm.GetBrowserChannel(),
	}
}

// Fetch calls the browser-provided Fetch method
func (c *BrowserAPIClient) Fetch(ctx context.Context, req *browserv1.FetchRequest) (*browserv1.FetchResponse, error) {
	// This is a synchronous browser method
	return wasm.CallBrowserService[*browserv1.FetchRequest, *browserv1.FetchResponse](
		c.channel, ctx, "BrowserAPI", "fetch", req,
	)
}

// GetLocalStorage calls the browser-provided GetLocalStorage method
func (c *BrowserAPIClient) GetLocalStorage(ctx context.Context, req *browserv1.StorageKeyRequest) (*browserv1.StorageValueResponse, error) {
	// This is a synchronous browser method
	return wasm.CallBrowserService[*browserv1.StorageKeyRequest, *browserv1.StorageValueResponse](
		c.channel, ctx, "BrowserAPI", "getLocalStorage", req,
	)
}

// SetLocalStorage calls the browser-provided SetLocalStorage method
func (c *BrowserAPIClient) SetLocalStorage(ctx context.Context, req *browserv1.StorageSetRequest) (*browserv1.StorageSetResponse, error) {
	// This is a synchronous browser method
	return wasm.CallBrowserService[*browserv1.StorageSetRequest, *browserv1.StorageSetResponse](
		c.channel, ctx, "BrowserAPI", "setLocalStorage", req,
	)
}

// GetCookie calls the browser-provided GetCookie method
func (c *BrowserAPIClient) GetCookie(ctx context.Context, req *browserv1.CookieRequest) (*browserv1.CookieResponse, error) {
	// This is a synchronous browser method
	return wasm.CallBrowserService[*browserv1.CookieRequest, *browserv1.CookieResponse](
		c.channel, ctx, "BrowserAPI", "getCookie", req,
	)
}

// Alert calls the browser-provided Alert method
func (c *BrowserAPIClient) Alert(ctx context.Context, req *browserv1.AlertRequest) (*browserv1.AlertResponse, error) {
	// This is a synchronous browser method
	return wasm.CallBrowserService[*browserv1.AlertRequest, *browserv1.AlertResponse](
		c.channel, ctx, "BrowserAPI", "alert", req,
	)
}

// PromptUser calls the browser-provided PromptUser method
func (c *BrowserAPIClient) PromptUser(ctx context.Context, req *browserv1.PromptRequest) (*browserv1.PromptResponse, error) {
	// This is a synchronous browser method
	return wasm.CallBrowserService[*browserv1.PromptRequest, *browserv1.PromptResponse](
		c.channel, ctx, "BrowserAPI", "promptUser", req,
	)
}

// LogToWindow calls the browser-provided LogToWindow method
func (c *BrowserAPIClient) LogToWindow(ctx context.Context, req *browserv1.LogRequest) (*browserv1.LogResponse, error) {
	// This is a synchronous browser method
	return wasm.CallBrowserService[*browserv1.LogRequest, *browserv1.LogResponse](
		c.channel, ctx, "BrowserAPI", "logToWindow", req,
	)
}
