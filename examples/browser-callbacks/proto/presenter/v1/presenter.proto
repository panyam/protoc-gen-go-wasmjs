syntax = "proto3";

package presenter.v1;

import "google/api/annotations.proto";
import "google/protobuf/field_mask.proto";
import "google/protobuf/timestamp.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
import "wasmjs/v1/annotations.proto";
import "utils/v1/helper.proto";

option go_package = "github.com/panyam/protoc-gen-go-wasmjs/examples/browser-callbacks/gen/go/presenter/v1;presenterv1";

// PresenterService runs in WASM and drives UI logic
service PresenterService {
    // LoadUserData fetches user data from API and stores it locally
    rpc LoadUserData(LoadUserDataRequest) returns (LoadUserDataResponse) {
      option (google.api.http) = {
        post: "/v1/LoadUserData",
        body: "*",
      };
    }

    // UpdateUIState processes state changes and returns UI updates
    rpc UpdateUIState(StateUpdateRequest) returns (stream UIUpdate);

    // SavePreferences saves user preferences to localStorage
    rpc SavePreferences(PreferencesRequest) returns (PreferencesResponse);

    // RunCallbackDemo demonstrates browser callbacks by prompting user 3 times
    rpc RunCallbackDemo(CallbackDemoRequest) returns (CallbackDemoResponse) {
        option (wasmjs.v1.async_method) = { is_async: true };
    };
}

// Request to load user data
message LoadUserDataRequest {
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
      json_schema: {
        title: "LoadUserDataRequest"
      }
    };
    string user_id = 1;
}

// Response with user data
message LoadUserDataResponse {
    string username = 1;
    string email = 2;
    repeated string permissions = 3;
    bool from_cache = 4;
    google.protobuf.Timestamp created_at = 5;
}

// Request to update state
message StateUpdateRequest {
    string action = 1;
    map<string, string> params = 2;
    google.protobuf.FieldMask update_mask = 3;
}

// UI update message (streamed)
message UIUpdate {
    string component = 1;
    string action = 2;
    map<string, string> data = 3;
}

message TestRecord {
    utils.v1.HelperUtilType helper_record = 1;
    utils.v1.ParentUtilMessage.NestedUtilType nested_helper = 2;
}

// Request to save preferences
message PreferencesRequest {
    map<string, string> preferences = 1;
}

// Response from preferences save
message PreferencesResponse {
    bool saved = 1;
    int32 items_saved = 2;
}

// Request to run callback demo
message CallbackDemoRequest {
    string demo_name = 1;
}

// Response from callback demo
message CallbackDemoResponse {
    repeated string collected_inputs = 1;
    bool completed = 2;
}
