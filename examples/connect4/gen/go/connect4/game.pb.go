// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: connect4/game.proto

package connect4

import (
	v1 "github.com/panyam/protoc-gen-go-wasmjs/examples/connect4/gen/go/wasmjs/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GameStatus int32

const (
	GameStatus_WAITING_FOR_PLAYERS GameStatus = 0
	GameStatus_IN_PROGRESS         GameStatus = 1
	GameStatus_FINISHED            GameStatus = 2
	GameStatus_PAUSED              GameStatus = 3
)

// Enum value maps for GameStatus.
var (
	GameStatus_name = map[int32]string{
		0: "WAITING_FOR_PLAYERS",
		1: "IN_PROGRESS",
		2: "FINISHED",
		3: "PAUSED",
	}
	GameStatus_value = map[string]int32{
		"WAITING_FOR_PLAYERS": 0,
		"IN_PROGRESS":         1,
		"FINISHED":            2,
		"PAUSED":              3,
	}
)

func (x GameStatus) Enum() *GameStatus {
	p := new(GameStatus)
	*p = x
	return p
}

func (x GameStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GameStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_connect4_game_proto_enumTypes[0].Descriptor()
}

func (GameStatus) Type() protoreflect.EnumType {
	return &file_connect4_game_proto_enumTypes[0]
}

func (x GameStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GameStatus.Descriptor instead.
func (GameStatus) EnumDescriptor() ([]byte, []int) {
	return file_connect4_game_proto_rawDescGZIP(), []int{0}
}

type GameState struct {
	state              protoimpl.MessageState  `protogen:"open.v1"`
	GameId             string                  `protobuf:"bytes,1,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`
	Config             *GameConfig             `protobuf:"bytes,2,opt,name=config,proto3" json:"config,omitempty"`
	Players            []*Player               `protobuf:"bytes,3,rep,name=players,proto3" json:"players,omitempty"`
	Board              *GameBoard              `protobuf:"bytes,4,opt,name=board,proto3" json:"board,omitempty"`
	CurrentPlayerId    string                  `protobuf:"bytes,5,opt,name=current_player_id,json=currentPlayerId,proto3" json:"current_player_id,omitempty"`
	TurnNumber         int32                   `protobuf:"varint,6,opt,name=turn_number,json=turnNumber,proto3" json:"turn_number,omitempty"`
	Status             GameStatus              `protobuf:"varint,7,opt,name=status,proto3,enum=connect4.GameStatus" json:"status,omitempty"`
	Winners            []string                `protobuf:"bytes,8,rep,name=winners,proto3" json:"winners,omitempty"` // Player IDs who achieved connect-4
	PlayerStats        map[string]*PlayerStats `protobuf:"bytes,9,rep,name=player_stats,json=playerStats,proto3" json:"player_stats,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	LastMoveTime       int64                   `protobuf:"varint,10,opt,name=last_move_time,json=lastMoveTime,proto3" json:"last_move_time,omitempty"`
	MoveTimeoutSeconds int32                   `protobuf:"varint,11,opt,name=move_timeout_seconds,json=moveTimeoutSeconds,proto3" json:"move_timeout_seconds,omitempty"` // Auto-skip after timeout
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *GameState) Reset() {
	*x = GameState{}
	mi := &file_connect4_game_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GameState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameState) ProtoMessage() {}

func (x *GameState) ProtoReflect() protoreflect.Message {
	mi := &file_connect4_game_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameState.ProtoReflect.Descriptor instead.
func (*GameState) Descriptor() ([]byte, []int) {
	return file_connect4_game_proto_rawDescGZIP(), []int{0}
}

func (x *GameState) GetGameId() string {
	if x != nil {
		return x.GameId
	}
	return ""
}

func (x *GameState) GetConfig() *GameConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *GameState) GetPlayers() []*Player {
	if x != nil {
		return x.Players
	}
	return nil
}

func (x *GameState) GetBoard() *GameBoard {
	if x != nil {
		return x.Board
	}
	return nil
}

func (x *GameState) GetCurrentPlayerId() string {
	if x != nil {
		return x.CurrentPlayerId
	}
	return ""
}

func (x *GameState) GetTurnNumber() int32 {
	if x != nil {
		return x.TurnNumber
	}
	return 0
}

func (x *GameState) GetStatus() GameStatus {
	if x != nil {
		return x.Status
	}
	return GameStatus_WAITING_FOR_PLAYERS
}

func (x *GameState) GetWinners() []string {
	if x != nil {
		return x.Winners
	}
	return nil
}

func (x *GameState) GetPlayerStats() map[string]*PlayerStats {
	if x != nil {
		return x.PlayerStats
	}
	return nil
}

func (x *GameState) GetLastMoveTime() int64 {
	if x != nil {
		return x.LastMoveTime
	}
	return 0
}

func (x *GameState) GetMoveTimeoutSeconds() int32 {
	if x != nil {
		return x.MoveTimeoutSeconds
	}
	return 0
}

type GameConfig struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	BoardWidth           int32                  `protobuf:"varint,1,opt,name=board_width,json=boardWidth,proto3" json:"board_width,omitempty"`          // 7-20
	BoardHeight          int32                  `protobuf:"varint,2,opt,name=board_height,json=boardHeight,proto3" json:"board_height,omitempty"`       // 6-20
	MinPlayers           int32                  `protobuf:"varint,3,opt,name=min_players,json=minPlayers,proto3" json:"min_players,omitempty"`          // 2-10
	MaxPlayers           int32                  `protobuf:"varint,4,opt,name=max_players,json=maxPlayers,proto3" json:"max_players,omitempty"`          // 2-10
	ConnectLength        int32                  `protobuf:"varint,5,opt,name=connect_length,json=connectLength,proto3" json:"connect_length,omitempty"` // Usually 4, could be 3-6
	AllowMultipleWinners bool                   `protobuf:"varint,6,opt,name=allow_multiple_winners,json=allowMultipleWinners,proto3" json:"allow_multiple_winners,omitempty"`
	MoveTimeoutSeconds   int32                  `protobuf:"varint,7,opt,name=move_timeout_seconds,json=moveTimeoutSeconds,proto3" json:"move_timeout_seconds,omitempty"` // 0 = no timeout
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *GameConfig) Reset() {
	*x = GameConfig{}
	mi := &file_connect4_game_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GameConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameConfig) ProtoMessage() {}

func (x *GameConfig) ProtoReflect() protoreflect.Message {
	mi := &file_connect4_game_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameConfig.ProtoReflect.Descriptor instead.
func (*GameConfig) Descriptor() ([]byte, []int) {
	return file_connect4_game_proto_rawDescGZIP(), []int{1}
}

func (x *GameConfig) GetBoardWidth() int32 {
	if x != nil {
		return x.BoardWidth
	}
	return 0
}

func (x *GameConfig) GetBoardHeight() int32 {
	if x != nil {
		return x.BoardHeight
	}
	return 0
}

func (x *GameConfig) GetMinPlayers() int32 {
	if x != nil {
		return x.MinPlayers
	}
	return 0
}

func (x *GameConfig) GetMaxPlayers() int32 {
	if x != nil {
		return x.MaxPlayers
	}
	return 0
}

func (x *GameConfig) GetConnectLength() int32 {
	if x != nil {
		return x.ConnectLength
	}
	return 0
}

func (x *GameConfig) GetAllowMultipleWinners() bool {
	if x != nil {
		return x.AllowMultipleWinners
	}
	return false
}

func (x *GameConfig) GetMoveTimeoutSeconds() int32 {
	if x != nil {
		return x.MoveTimeoutSeconds
	}
	return 0
}

type Player struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Color         string                 `protobuf:"bytes,3,opt,name=color,proto3" json:"color,omitempty"` // hex color
	IsConnected   bool                   `protobuf:"varint,4,opt,name=is_connected,json=isConnected,proto3" json:"is_connected,omitempty"`
	JoinOrder     int32                  `protobuf:"varint,5,opt,name=join_order,json=joinOrder,proto3" json:"join_order,omitempty"` // Determines turn order
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Player) Reset() {
	*x = Player{}
	mi := &file_connect4_game_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Player) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Player) ProtoMessage() {}

func (x *Player) ProtoReflect() protoreflect.Message {
	mi := &file_connect4_game_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Player.ProtoReflect.Descriptor instead.
func (*Player) Descriptor() ([]byte, []int) {
	return file_connect4_game_proto_rawDescGZIP(), []int{2}
}

func (x *Player) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Player) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Player) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

func (x *Player) GetIsConnected() bool {
	if x != nil {
		return x.IsConnected
	}
	return false
}

func (x *Player) GetJoinOrder() int32 {
	if x != nil {
		return x.JoinOrder
	}
	return 0
}

type GameBoard struct {
	state  protoimpl.MessageState `protogen:"open.v1"`
	Width  int32                  `protobuf:"varint,1,opt,name=width,proto3" json:"width,omitempty"`
	Height int32                  `protobuf:"varint,2,opt,name=height,proto3" json:"height,omitempty"`
	// Board representation: grid[y][x] = player_id (empty = "")
	Rows          []*BoardRow `protobuf:"bytes,3,rep,name=rows,proto3" json:"rows,omitempty"`
	ColumnHeights []int32     `protobuf:"varint,4,rep,packed,name=column_heights,json=columnHeights,proto3" json:"column_heights,omitempty"` // How many pieces in each column
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GameBoard) Reset() {
	*x = GameBoard{}
	mi := &file_connect4_game_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GameBoard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameBoard) ProtoMessage() {}

func (x *GameBoard) ProtoReflect() protoreflect.Message {
	mi := &file_connect4_game_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameBoard.ProtoReflect.Descriptor instead.
func (*GameBoard) Descriptor() ([]byte, []int) {
	return file_connect4_game_proto_rawDescGZIP(), []int{3}
}

func (x *GameBoard) GetWidth() int32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *GameBoard) GetHeight() int32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *GameBoard) GetRows() []*BoardRow {
	if x != nil {
		return x.Rows
	}
	return nil
}

func (x *GameBoard) GetColumnHeights() []int32 {
	if x != nil {
		return x.ColumnHeights
	}
	return nil
}

type BoardRow struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Cells         []string               `protobuf:"bytes,1,rep,name=cells,proto3" json:"cells,omitempty"` // player_id in each cell, "" = empty
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BoardRow) Reset() {
	*x = BoardRow{}
	mi := &file_connect4_game_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BoardRow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BoardRow) ProtoMessage() {}

func (x *BoardRow) ProtoReflect() protoreflect.Message {
	mi := &file_connect4_game_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BoardRow.ProtoReflect.Descriptor instead.
func (*BoardRow) Descriptor() ([]byte, []int) {
	return file_connect4_game_proto_rawDescGZIP(), []int{4}
}

func (x *BoardRow) GetCells() []string {
	if x != nil {
		return x.Cells
	}
	return nil
}

type PlayerStats struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PiecesPlayed  int32                  `protobuf:"varint,1,opt,name=pieces_played,json=piecesPlayed,proto3" json:"pieces_played,omitempty"`
	WinningLines  int32                  `protobuf:"varint,2,opt,name=winning_lines,json=winningLines,proto3" json:"winning_lines,omitempty"` // Number of connect-4s achieved
	HasWon        bool                   `protobuf:"varint,3,opt,name=has_won,json=hasWon,proto3" json:"has_won,omitempty"`
	TotalMoveTime int64                  `protobuf:"varint,4,opt,name=total_move_time,json=totalMoveTime,proto3" json:"total_move_time,omitempty"` // Milliseconds
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PlayerStats) Reset() {
	*x = PlayerStats{}
	mi := &file_connect4_game_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PlayerStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerStats) ProtoMessage() {}

func (x *PlayerStats) ProtoReflect() protoreflect.Message {
	mi := &file_connect4_game_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerStats.ProtoReflect.Descriptor instead.
func (*PlayerStats) Descriptor() ([]byte, []int) {
	return file_connect4_game_proto_rawDescGZIP(), []int{5}
}

func (x *PlayerStats) GetPiecesPlayed() int32 {
	if x != nil {
		return x.PiecesPlayed
	}
	return 0
}

func (x *PlayerStats) GetWinningLines() int32 {
	if x != nil {
		return x.WinningLines
	}
	return 0
}

func (x *PlayerStats) GetHasWon() bool {
	if x != nil {
		return x.HasWon
	}
	return false
}

func (x *PlayerStats) GetTotalMoveTime() int64 {
	if x != nil {
		return x.TotalMoveTime
	}
	return 0
}

// Request/Response messages
type GetGameRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	GameId        string                 `protobuf:"bytes,1,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetGameRequest) Reset() {
	*x = GetGameRequest{}
	mi := &file_connect4_game_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetGameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGameRequest) ProtoMessage() {}

func (x *GetGameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_connect4_game_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGameRequest.ProtoReflect.Descriptor instead.
func (*GetGameRequest) Descriptor() ([]byte, []int) {
	return file_connect4_game_proto_rawDescGZIP(), []int{6}
}

func (x *GetGameRequest) GetGameId() string {
	if x != nil {
		return x.GameId
	}
	return ""
}

type DropPieceRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	GameId        string                 `protobuf:"bytes,1,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`
	PlayerId      string                 `protobuf:"bytes,2,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	Column        int32                  `protobuf:"varint,3,opt,name=column,proto3" json:"column,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DropPieceRequest) Reset() {
	*x = DropPieceRequest{}
	mi := &file_connect4_game_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DropPieceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DropPieceRequest) ProtoMessage() {}

func (x *DropPieceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_connect4_game_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DropPieceRequest.ProtoReflect.Descriptor instead.
func (*DropPieceRequest) Descriptor() ([]byte, []int) {
	return file_connect4_game_proto_rawDescGZIP(), []int{7}
}

func (x *DropPieceRequest) GetGameId() string {
	if x != nil {
		return x.GameId
	}
	return ""
}

func (x *DropPieceRequest) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *DropPieceRequest) GetColumn() int32 {
	if x != nil {
		return x.Column
	}
	return 0
}

type DropPieceResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	ErrorMessage  string                 `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	Patches       []*v1.MessagePatch     `protobuf:"bytes,3,rep,name=patches,proto3" json:"patches,omitempty"`
	ChangeNumber  int64                  `protobuf:"varint,4,opt,name=change_number,json=changeNumber,proto3" json:"change_number,omitempty"`
	Result        *PieceDropResult       `protobuf:"bytes,5,opt,name=result,proto3" json:"result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DropPieceResponse) Reset() {
	*x = DropPieceResponse{}
	mi := &file_connect4_game_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DropPieceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DropPieceResponse) ProtoMessage() {}

func (x *DropPieceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_connect4_game_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DropPieceResponse.ProtoReflect.Descriptor instead.
func (*DropPieceResponse) Descriptor() ([]byte, []int) {
	return file_connect4_game_proto_rawDescGZIP(), []int{8}
}

func (x *DropPieceResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *DropPieceResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *DropPieceResponse) GetPatches() []*v1.MessagePatch {
	if x != nil {
		return x.Patches
	}
	return nil
}

func (x *DropPieceResponse) GetChangeNumber() int64 {
	if x != nil {
		return x.ChangeNumber
	}
	return 0
}

func (x *DropPieceResponse) GetResult() *PieceDropResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type PieceDropResult struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FinalRow      int32                  `protobuf:"varint,1,opt,name=final_row,json=finalRow,proto3" json:"final_row,omitempty"` // Where the piece landed
	FinalColumn   int32                  `protobuf:"varint,2,opt,name=final_column,json=finalColumn,proto3" json:"final_column,omitempty"`
	FormedLine    bool                   `protobuf:"varint,3,opt,name=formed_line,json=formedLine,proto3" json:"formed_line,omitempty"`      // Did this move create a connect-4?
	WinningLines  []*LineInfo            `protobuf:"bytes,4,rep,name=winning_lines,json=winningLines,proto3" json:"winning_lines,omitempty"` // Details of any lines formed
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PieceDropResult) Reset() {
	*x = PieceDropResult{}
	mi := &file_connect4_game_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PieceDropResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PieceDropResult) ProtoMessage() {}

func (x *PieceDropResult) ProtoReflect() protoreflect.Message {
	mi := &file_connect4_game_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PieceDropResult.ProtoReflect.Descriptor instead.
func (*PieceDropResult) Descriptor() ([]byte, []int) {
	return file_connect4_game_proto_rawDescGZIP(), []int{9}
}

func (x *PieceDropResult) GetFinalRow() int32 {
	if x != nil {
		return x.FinalRow
	}
	return 0
}

func (x *PieceDropResult) GetFinalColumn() int32 {
	if x != nil {
		return x.FinalColumn
	}
	return 0
}

func (x *PieceDropResult) GetFormedLine() bool {
	if x != nil {
		return x.FormedLine
	}
	return false
}

func (x *PieceDropResult) GetWinningLines() []*LineInfo {
	if x != nil {
		return x.WinningLines
	}
	return nil
}

type LineInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Positions     []*Position            `protobuf:"bytes,1,rep,name=positions,proto3" json:"positions,omitempty"`
	Direction     string                 `protobuf:"bytes,2,opt,name=direction,proto3" json:"direction,omitempty"` // "horizontal", "vertical", "diagonal_up", "diagonal_down"
	Length        int32                  `protobuf:"varint,3,opt,name=length,proto3" json:"length,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LineInfo) Reset() {
	*x = LineInfo{}
	mi := &file_connect4_game_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LineInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LineInfo) ProtoMessage() {}

func (x *LineInfo) ProtoReflect() protoreflect.Message {
	mi := &file_connect4_game_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LineInfo.ProtoReflect.Descriptor instead.
func (*LineInfo) Descriptor() ([]byte, []int) {
	return file_connect4_game_proto_rawDescGZIP(), []int{10}
}

func (x *LineInfo) GetPositions() []*Position {
	if x != nil {
		return x.Positions
	}
	return nil
}

func (x *LineInfo) GetDirection() string {
	if x != nil {
		return x.Direction
	}
	return ""
}

func (x *LineInfo) GetLength() int32 {
	if x != nil {
		return x.Length
	}
	return 0
}

type Position struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Row           int32                  `protobuf:"varint,1,opt,name=row,proto3" json:"row,omitempty"`
	Column        int32                  `protobuf:"varint,2,opt,name=column,proto3" json:"column,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Position) Reset() {
	*x = Position{}
	mi := &file_connect4_game_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Position) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Position) ProtoMessage() {}

func (x *Position) ProtoReflect() protoreflect.Message {
	mi := &file_connect4_game_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Position.ProtoReflect.Descriptor instead.
func (*Position) Descriptor() ([]byte, []int) {
	return file_connect4_game_proto_rawDescGZIP(), []int{11}
}

func (x *Position) GetRow() int32 {
	if x != nil {
		return x.Row
	}
	return 0
}

func (x *Position) GetColumn() int32 {
	if x != nil {
		return x.Column
	}
	return 0
}

type JoinGameRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	GameId         string                 `protobuf:"bytes,1,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`
	PlayerName     string                 `protobuf:"bytes,2,opt,name=player_name,json=playerName,proto3" json:"player_name,omitempty"`
	PreferredColor string                 `protobuf:"bytes,3,opt,name=preferred_color,json=preferredColor,proto3" json:"preferred_color,omitempty"` // Optional color preference
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *JoinGameRequest) Reset() {
	*x = JoinGameRequest{}
	mi := &file_connect4_game_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JoinGameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinGameRequest) ProtoMessage() {}

func (x *JoinGameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_connect4_game_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinGameRequest.ProtoReflect.Descriptor instead.
func (*JoinGameRequest) Descriptor() ([]byte, []int) {
	return file_connect4_game_proto_rawDescGZIP(), []int{12}
}

func (x *JoinGameRequest) GetGameId() string {
	if x != nil {
		return x.GameId
	}
	return ""
}

func (x *JoinGameRequest) GetPlayerName() string {
	if x != nil {
		return x.PlayerName
	}
	return ""
}

func (x *JoinGameRequest) GetPreferredColor() string {
	if x != nil {
		return x.PreferredColor
	}
	return ""
}

type JoinGameResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	ErrorMessage  string                 `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	PlayerId      string                 `protobuf:"bytes,3,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	AssignedColor string                 `protobuf:"bytes,4,opt,name=assigned_color,json=assignedColor,proto3" json:"assigned_color,omitempty"`
	GameState     *GameState             `protobuf:"bytes,5,opt,name=game_state,json=gameState,proto3" json:"game_state,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *JoinGameResponse) Reset() {
	*x = JoinGameResponse{}
	mi := &file_connect4_game_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JoinGameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinGameResponse) ProtoMessage() {}

func (x *JoinGameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_connect4_game_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinGameResponse.ProtoReflect.Descriptor instead.
func (*JoinGameResponse) Descriptor() ([]byte, []int) {
	return file_connect4_game_proto_rawDescGZIP(), []int{13}
}

func (x *JoinGameResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *JoinGameResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *JoinGameResponse) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *JoinGameResponse) GetAssignedColor() string {
	if x != nil {
		return x.AssignedColor
	}
	return ""
}

func (x *JoinGameResponse) GetGameState() *GameState {
	if x != nil {
		return x.GameState
	}
	return nil
}

type CreateGameRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	GameId        string                 `protobuf:"bytes,1,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`
	Config        *GameConfig            `protobuf:"bytes,2,opt,name=config,proto3" json:"config,omitempty"`
	CreatorName   string                 `protobuf:"bytes,3,opt,name=creator_name,json=creatorName,proto3" json:"creator_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateGameRequest) Reset() {
	*x = CreateGameRequest{}
	mi := &file_connect4_game_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateGameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGameRequest) ProtoMessage() {}

func (x *CreateGameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_connect4_game_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGameRequest.ProtoReflect.Descriptor instead.
func (*CreateGameRequest) Descriptor() ([]byte, []int) {
	return file_connect4_game_proto_rawDescGZIP(), []int{14}
}

func (x *CreateGameRequest) GetGameId() string {
	if x != nil {
		return x.GameId
	}
	return ""
}

func (x *CreateGameRequest) GetConfig() *GameConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *CreateGameRequest) GetCreatorName() string {
	if x != nil {
		return x.CreatorName
	}
	return ""
}

type CreateGameResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	ErrorMessage  string                 `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	PlayerId      string                 `protobuf:"bytes,3,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	GameState     *GameState             `protobuf:"bytes,4,opt,name=game_state,json=gameState,proto3" json:"game_state,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateGameResponse) Reset() {
	*x = CreateGameResponse{}
	mi := &file_connect4_game_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateGameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGameResponse) ProtoMessage() {}

func (x *CreateGameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_connect4_game_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGameResponse.ProtoReflect.Descriptor instead.
func (*CreateGameResponse) Descriptor() ([]byte, []int) {
	return file_connect4_game_proto_rawDescGZIP(), []int{15}
}

func (x *CreateGameResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *CreateGameResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *CreateGameResponse) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *CreateGameResponse) GetGameState() *GameState {
	if x != nil {
		return x.GameState
	}
	return nil
}

var File_connect4_game_proto protoreflect.FileDescriptor

const file_connect4_game_proto_rawDesc = "" +
	"\n" +
	"\x13connect4/game.proto\x12\bconnect4\x1a\x1bwasmjs/v1/annotations.proto\x1a\x17wasmjs/v1/patches.proto\"\xb6\x04\n" +
	"\tGameState\x12\x17\n" +
	"\agame_id\x18\x01 \x01(\tR\x06gameId\x12,\n" +
	"\x06config\x18\x02 \x01(\v2\x14.connect4.GameConfigR\x06config\x12*\n" +
	"\aplayers\x18\x03 \x03(\v2\x10.connect4.PlayerR\aplayers\x12)\n" +
	"\x05board\x18\x04 \x01(\v2\x13.connect4.GameBoardR\x05board\x12*\n" +
	"\x11current_player_id\x18\x05 \x01(\tR\x0fcurrentPlayerId\x12\x1f\n" +
	"\vturn_number\x18\x06 \x01(\x05R\n" +
	"turnNumber\x12,\n" +
	"\x06status\x18\a \x01(\x0e2\x14.connect4.GameStatusR\x06status\x12\x18\n" +
	"\awinners\x18\b \x03(\tR\awinners\x12G\n" +
	"\fplayer_stats\x18\t \x03(\v2$.connect4.GameState.PlayerStatsEntryR\vplayerStats\x12$\n" +
	"\x0elast_move_time\x18\n" +
	" \x01(\x03R\flastMoveTime\x120\n" +
	"\x14move_timeout_seconds\x18\v \x01(\x05R\x12moveTimeoutSeconds\x1aU\n" +
	"\x10PlayerStatsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12+\n" +
	"\x05value\x18\x02 \x01(\v2\x15.connect4.PlayerStatsR\x05value:\x028\x01\"\xa1\x02\n" +
	"\n" +
	"GameConfig\x12\x1f\n" +
	"\vboard_width\x18\x01 \x01(\x05R\n" +
	"boardWidth\x12!\n" +
	"\fboard_height\x18\x02 \x01(\x05R\vboardHeight\x12\x1f\n" +
	"\vmin_players\x18\x03 \x01(\x05R\n" +
	"minPlayers\x12\x1f\n" +
	"\vmax_players\x18\x04 \x01(\x05R\n" +
	"maxPlayers\x12%\n" +
	"\x0econnect_length\x18\x05 \x01(\x05R\rconnectLength\x124\n" +
	"\x16allow_multiple_winners\x18\x06 \x01(\bR\x14allowMultipleWinners\x120\n" +
	"\x14move_timeout_seconds\x18\a \x01(\x05R\x12moveTimeoutSeconds\"\x84\x01\n" +
	"\x06Player\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x14\n" +
	"\x05color\x18\x03 \x01(\tR\x05color\x12!\n" +
	"\fis_connected\x18\x04 \x01(\bR\visConnected\x12\x1d\n" +
	"\n" +
	"join_order\x18\x05 \x01(\x05R\tjoinOrder\"\x88\x01\n" +
	"\tGameBoard\x12\x14\n" +
	"\x05width\x18\x01 \x01(\x05R\x05width\x12\x16\n" +
	"\x06height\x18\x02 \x01(\x05R\x06height\x12&\n" +
	"\x04rows\x18\x03 \x03(\v2\x12.connect4.BoardRowR\x04rows\x12%\n" +
	"\x0ecolumn_heights\x18\x04 \x03(\x05R\rcolumnHeights\" \n" +
	"\bBoardRow\x12\x14\n" +
	"\x05cells\x18\x01 \x03(\tR\x05cells\"\x98\x01\n" +
	"\vPlayerStats\x12#\n" +
	"\rpieces_played\x18\x01 \x01(\x05R\fpiecesPlayed\x12#\n" +
	"\rwinning_lines\x18\x02 \x01(\x05R\fwinningLines\x12\x17\n" +
	"\ahas_won\x18\x03 \x01(\bR\x06hasWon\x12&\n" +
	"\x0ftotal_move_time\x18\x04 \x01(\x03R\rtotalMoveTime\")\n" +
	"\x0eGetGameRequest\x12\x17\n" +
	"\agame_id\x18\x01 \x01(\tR\x06gameId\"`\n" +
	"\x10DropPieceRequest\x12\x17\n" +
	"\agame_id\x18\x01 \x01(\tR\x06gameId\x12\x1b\n" +
	"\tplayer_id\x18\x02 \x01(\tR\bplayerId\x12\x16\n" +
	"\x06column\x18\x03 \x01(\x05R\x06column\"\xdd\x01\n" +
	"\x11DropPieceResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12#\n" +
	"\rerror_message\x18\x02 \x01(\tR\ferrorMessage\x121\n" +
	"\apatches\x18\x03 \x03(\v2\x17.wasmjs.v1.MessagePatchR\apatches\x12#\n" +
	"\rchange_number\x18\x04 \x01(\x03R\fchangeNumber\x121\n" +
	"\x06result\x18\x05 \x01(\v2\x19.connect4.PieceDropResultR\x06result\"\xab\x01\n" +
	"\x0fPieceDropResult\x12\x1b\n" +
	"\tfinal_row\x18\x01 \x01(\x05R\bfinalRow\x12!\n" +
	"\ffinal_column\x18\x02 \x01(\x05R\vfinalColumn\x12\x1f\n" +
	"\vformed_line\x18\x03 \x01(\bR\n" +
	"formedLine\x127\n" +
	"\rwinning_lines\x18\x04 \x03(\v2\x12.connect4.LineInfoR\fwinningLines\"r\n" +
	"\bLineInfo\x120\n" +
	"\tpositions\x18\x01 \x03(\v2\x12.connect4.PositionR\tpositions\x12\x1c\n" +
	"\tdirection\x18\x02 \x01(\tR\tdirection\x12\x16\n" +
	"\x06length\x18\x03 \x01(\x05R\x06length\"4\n" +
	"\bPosition\x12\x10\n" +
	"\x03row\x18\x01 \x01(\x05R\x03row\x12\x16\n" +
	"\x06column\x18\x02 \x01(\x05R\x06column\"t\n" +
	"\x0fJoinGameRequest\x12\x17\n" +
	"\agame_id\x18\x01 \x01(\tR\x06gameId\x12\x1f\n" +
	"\vplayer_name\x18\x02 \x01(\tR\n" +
	"playerName\x12'\n" +
	"\x0fpreferred_color\x18\x03 \x01(\tR\x0epreferredColor\"\xc9\x01\n" +
	"\x10JoinGameResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12#\n" +
	"\rerror_message\x18\x02 \x01(\tR\ferrorMessage\x12\x1b\n" +
	"\tplayer_id\x18\x03 \x01(\tR\bplayerId\x12%\n" +
	"\x0eassigned_color\x18\x04 \x01(\tR\rassignedColor\x122\n" +
	"\n" +
	"game_state\x18\x05 \x01(\v2\x13.connect4.GameStateR\tgameState\"}\n" +
	"\x11CreateGameRequest\x12\x17\n" +
	"\agame_id\x18\x01 \x01(\tR\x06gameId\x12,\n" +
	"\x06config\x18\x02 \x01(\v2\x14.connect4.GameConfigR\x06config\x12!\n" +
	"\fcreator_name\x18\x03 \x01(\tR\vcreatorName\"\xa4\x01\n" +
	"\x12CreateGameResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12#\n" +
	"\rerror_message\x18\x02 \x01(\tR\ferrorMessage\x12\x1b\n" +
	"\tplayer_id\x18\x03 \x01(\tR\bplayerId\x122\n" +
	"\n" +
	"game_state\x18\x04 \x01(\v2\x13.connect4.GameStateR\tgameState*P\n" +
	"\n" +
	"GameStatus\x12\x17\n" +
	"\x13WAITING_FOR_PLAYERS\x10\x00\x12\x0f\n" +
	"\vIN_PROGRESS\x10\x01\x12\f\n" +
	"\bFINISHED\x10\x02\x12\n" +
	"\n" +
	"\x06PAUSED\x10\x032\xcf\x02\n" +
	"\x0fConnect4Service\x128\n" +
	"\aGetGame\x12\x18.connect4.GetGameRequest\x1a\x13.connect4.GameState\x12N\n" +
	"\tDropPiece\x12\x1a.connect4.DropPieceRequest\x1a\x1b.connect4.DropPieceResponse\"\b\xb2\xb5\x18\x04\b\x01\x10\x01\x12A\n" +
	"\bJoinGame\x12\x19.connect4.JoinGameRequest\x1a\x1a.connect4.JoinGameResponse\x12G\n" +
	"\n" +
	"CreateGame\x12\x1b.connect4.CreateGameRequest\x1a\x1c.connect4.CreateGameResponse\x1a&\xa2\xb5\x18\bconnect4\xaa\xb5\x18\x16\b\x01\x12\x12connect4.GameStateB\xa3\x01\n" +
	"\fcom.connect4B\tGameProtoP\x01ZHgithub.com/panyam/protoc-gen-go-wasmjs/examples/connect4/gen/go/connect4\xa2\x02\x03CXX\xaa\x02\bConnect4\xca\x02\bConnect4\xe2\x02\x14Connect4\\GPBMetadata\xea\x02\bConnect4b\x06proto3"

var (
	file_connect4_game_proto_rawDescOnce sync.Once
	file_connect4_game_proto_rawDescData []byte
)

func file_connect4_game_proto_rawDescGZIP() []byte {
	file_connect4_game_proto_rawDescOnce.Do(func() {
		file_connect4_game_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_connect4_game_proto_rawDesc), len(file_connect4_game_proto_rawDesc)))
	})
	return file_connect4_game_proto_rawDescData
}

var file_connect4_game_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_connect4_game_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_connect4_game_proto_goTypes = []any{
	(GameStatus)(0),            // 0: connect4.GameStatus
	(*GameState)(nil),          // 1: connect4.GameState
	(*GameConfig)(nil),         // 2: connect4.GameConfig
	(*Player)(nil),             // 3: connect4.Player
	(*GameBoard)(nil),          // 4: connect4.GameBoard
	(*BoardRow)(nil),           // 5: connect4.BoardRow
	(*PlayerStats)(nil),        // 6: connect4.PlayerStats
	(*GetGameRequest)(nil),     // 7: connect4.GetGameRequest
	(*DropPieceRequest)(nil),   // 8: connect4.DropPieceRequest
	(*DropPieceResponse)(nil),  // 9: connect4.DropPieceResponse
	(*PieceDropResult)(nil),    // 10: connect4.PieceDropResult
	(*LineInfo)(nil),           // 11: connect4.LineInfo
	(*Position)(nil),           // 12: connect4.Position
	(*JoinGameRequest)(nil),    // 13: connect4.JoinGameRequest
	(*JoinGameResponse)(nil),   // 14: connect4.JoinGameResponse
	(*CreateGameRequest)(nil),  // 15: connect4.CreateGameRequest
	(*CreateGameResponse)(nil), // 16: connect4.CreateGameResponse
	nil,                        // 17: connect4.GameState.PlayerStatsEntry
	(*v1.MessagePatch)(nil),    // 18: wasmjs.v1.MessagePatch
}
var file_connect4_game_proto_depIdxs = []int32{
	2,  // 0: connect4.GameState.config:type_name -> connect4.GameConfig
	3,  // 1: connect4.GameState.players:type_name -> connect4.Player
	4,  // 2: connect4.GameState.board:type_name -> connect4.GameBoard
	0,  // 3: connect4.GameState.status:type_name -> connect4.GameStatus
	17, // 4: connect4.GameState.player_stats:type_name -> connect4.GameState.PlayerStatsEntry
	5,  // 5: connect4.GameBoard.rows:type_name -> connect4.BoardRow
	18, // 6: connect4.DropPieceResponse.patches:type_name -> wasmjs.v1.MessagePatch
	10, // 7: connect4.DropPieceResponse.result:type_name -> connect4.PieceDropResult
	11, // 8: connect4.PieceDropResult.winning_lines:type_name -> connect4.LineInfo
	12, // 9: connect4.LineInfo.positions:type_name -> connect4.Position
	1,  // 10: connect4.JoinGameResponse.game_state:type_name -> connect4.GameState
	2,  // 11: connect4.CreateGameRequest.config:type_name -> connect4.GameConfig
	1,  // 12: connect4.CreateGameResponse.game_state:type_name -> connect4.GameState
	6,  // 13: connect4.GameState.PlayerStatsEntry.value:type_name -> connect4.PlayerStats
	7,  // 14: connect4.Connect4Service.GetGame:input_type -> connect4.GetGameRequest
	8,  // 15: connect4.Connect4Service.DropPiece:input_type -> connect4.DropPieceRequest
	13, // 16: connect4.Connect4Service.JoinGame:input_type -> connect4.JoinGameRequest
	15, // 17: connect4.Connect4Service.CreateGame:input_type -> connect4.CreateGameRequest
	1,  // 18: connect4.Connect4Service.GetGame:output_type -> connect4.GameState
	9,  // 19: connect4.Connect4Service.DropPiece:output_type -> connect4.DropPieceResponse
	14, // 20: connect4.Connect4Service.JoinGame:output_type -> connect4.JoinGameResponse
	16, // 21: connect4.Connect4Service.CreateGame:output_type -> connect4.CreateGameResponse
	18, // [18:22] is the sub-list for method output_type
	14, // [14:18] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_connect4_game_proto_init() }
func file_connect4_game_proto_init() {
	if File_connect4_game_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_connect4_game_proto_rawDesc), len(file_connect4_game_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_connect4_game_proto_goTypes,
		DependencyIndexes: file_connect4_game_proto_depIdxs,
		EnumInfos:         file_connect4_game_proto_enumTypes,
		MessageInfos:      file_connect4_game_proto_msgTypes,
	}.Build()
	File_connect4_game_proto = out.File
	file_connect4_game_proto_goTypes = nil
	file_connect4_game_proto_depIdxs = nil
}
