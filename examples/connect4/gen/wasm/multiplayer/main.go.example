// Example main.go for multiplayer_connect4 WASM module
// Copy this file to your project and customize the service implementations
//
// To use:
// 1. Run `buf generate` to generate the WASM package (multiplayer_connect4.wasm.go)
// 2. Copy this file to your project and update the import path below
// 3. Implement your services and build with: GOOS=js GOARCH=wasm go build -o multiplayer_connect4.wasm

package main

import (
	// Import the generated WASM package - UPDATE THIS PATH
	"your-module/path-to-generated/multiplayer_connect4"
	
	// Import the same protobuf types as the generated WASM file
	goconnect4 "github.com/panyam/protoc-gen-go-wasmjs/examples/connect4/gen/go/connect4"
)

func main() {
	// Initialize service implementations with your business logic
	exports := &multiplayer_connect4.Multiplayer_connect4ServicesExports{
		// TODO: Replace with your actual Connect4Service implementation
		// Connect4Service: &yourConnect4ServiceImplementation{
		//     // Initialize with database, config, etc.
		//     db: database,
		//     auth: authService,
		//     config: appConfig,
		// },
	}
	
	// Register the JavaScript API
	exports.RegisterAPI()
	
	// Keep the WASM module running
	select {}
}