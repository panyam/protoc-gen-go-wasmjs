// Copyright 2025 Sri Panyam
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//  http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.9.0 with parameter "target=ts"
// @generated from file wasmjs/v1/patches.proto (package wasmjs.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv2";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv2";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file wasmjs/v1/patches.proto.
 */
export const file_wasmjs_v1_patches: GenFile = /*@__PURE__*/
  fileDesc("Chd3YXNtanMvdjEvcGF0Y2hlcy5wcm90bxIJd2FzbWpzLnYxIuYBCgxNZXNzYWdlUGF0Y2gSLAoJb3BlcmF0aW9uGAEgASgOMhkud2FzbWpzLnYxLlBhdGNoT3BlcmF0aW9uEhIKCmZpZWxkX3BhdGgYAiABKAkSEgoKdmFsdWVfanNvbhgDIAEoCRINCgVpbmRleBgEIAEoBRILCgNrZXkYBSABKAkSEQoJb2xkX2luZGV4GAYgASgFEhUKDWNoYW5nZV9udW1iZXIYByABKAMSEQoJdGltZXN0YW1wGAggASgDEg8KB3VzZXJfaWQYCSABKAkSFgoOdHJhbnNhY3Rpb25faWQYCiABKAkihgIKClBhdGNoQmF0Y2gSFAoMbWVzc2FnZV90eXBlGAEgASgJEhEKCWVudGl0eV9pZBgCIAEoCRIoCgdwYXRjaGVzGAMgAygLMhcud2FzbWpzLnYxLk1lc3NhZ2VQYXRjaBIVCg1jaGFuZ2VfbnVtYmVyGAQgASgDEiYKBnNvdXJjZRgFIAEoDjIWLndhc21qcy52MS5QYXRjaFNvdXJjZRI1CghtZXRhZGF0YRgGIAMoCzIjLndhc21qcy52MS5QYXRjaEJhdGNoLk1ldGFkYXRhRW50cnkaLwoNTWV0YWRhdGFFbnRyeRILCgNrZXkYASABKAkSDQoFdmFsdWUYAiABKAk6AjgBIoABCg1QYXRjaFJlc3BvbnNlEiwKDXBhdGNoX2JhdGNoZXMYASADKAsyFS53YXNtanMudjEuUGF0Y2hCYXRjaBIPCgdzdWNjZXNzGAIgASgIEhUKDWVycm9yX21lc3NhZ2UYAyABKAkSGQoRbmV3X2NoYW5nZV9udW1iZXIYBCABKAMqiQEKDlBhdGNoT3BlcmF0aW9uEgcKA1NFVBAAEg8KC0lOU0VSVF9MSVNUEAESDwoLUkVNT1ZFX0xJU1QQAhINCglNT1ZFX0xJU1QQAxIOCgpJTlNFUlRfTUFQEAQSDgoKUkVNT1ZFX01BUBAFEg4KCkNMRUFSX0xJU1QQBhINCglDTEVBUl9NQVAQByo9CgtQYXRjaFNvdXJjZRIJCgVMT0NBTBAAEgoKBlJFTU9URRABEgoKBlNFUlZFUhACEgsKB1NUT1JBR0UQA0K1AQoNY29tLndhc21qcy52MUIMUGF0Y2hlc1Byb3RvUAFaUWdpdGh1Yi5jb20vcGFueWFtL3Byb3RvYy1nZW4tZ28td2FzbWpzL2V4YW1wbGVzL2xpYnJhcnkvZ2VuL2dvL3dhc21qcy92MTt3YXNtanN2MaICA1dYWKoCCVdhc21qcy5WMcoCCVdhc21qc1xWMeICFVdhc21qc1xWMVxHUEJNZXRhZGF0YeoCCldhc21qczo6VjFiBnByb3RvMw");

/**
 * A single patch operation on a protobuf message field
 *
 * @generated from message wasmjs.v1.MessagePatch
 */
export type MessagePatch = Message<"wasmjs.v1.MessagePatch"> & {
  /**
   * The type of operation to perform
   *
   * @generated from field: wasmjs.v1.PatchOperation operation = 1;
   */
  operation: PatchOperation;

  /**
   * Path to the field being modified (e.g., "players[2].name", "places['tile_123'].latitude")
   *
   * @generated from field: string field_path = 2;
   */
  fieldPath: string;

  /**
   * The new value to set (for SET, INSERT_LIST, INSERT_MAP operations)
   * Encoded as JSON for type flexibility
   *
   * @generated from field: string value_json = 3;
   */
  valueJson: string;

  /**
   * Index for list operations (INSERT_LIST, REMOVE_LIST, MOVE_LIST)
   *
   * @generated from field: int32 index = 4;
   */
  index: number;

  /**
   * Map key for map operations (INSERT_MAP, REMOVE_MAP)
   *
   * @generated from field: string key = 5;
   */
  key: string;

  /**
   * Source index for MOVE_LIST operations
   *
   * @generated from field: int32 old_index = 6;
   */
  oldIndex: number;

  /**
   * Monotonically increasing change number for ordering
   *
   * @generated from field: int64 change_number = 7;
   */
  changeNumber: bigint;

  /**
   * Timestamp when the change was created (microseconds since epoch)
   *
   * @generated from field: int64 timestamp = 8;
   */
  timestamp: bigint;

  /**
   * Optional user ID who made the change (for conflict resolution)
   *
   * @generated from field: string user_id = 9;
   */
  userId: string;

  /**
   * Optional transaction ID to group related patches
   *
   * @generated from field: string transaction_id = 10;
   */
  transactionId: string;
};

/**
 * Describes the message wasmjs.v1.MessagePatch.
 * Use `create(MessagePatchSchema)` to create a new message.
 */
export const MessagePatchSchema: GenMessage<MessagePatch> = /*@__PURE__*/
  messageDesc(file_wasmjs_v1_patches, 0);

/**
 * A batch of patches applied to a single entity
 *
 * @generated from message wasmjs.v1.PatchBatch
 */
export type PatchBatch = Message<"wasmjs.v1.PatchBatch"> & {
  /**
   * The fully qualified protobuf message type (e.g., "example.Game")
   *
   * @generated from field: string message_type = 1;
   */
  messageType: string;

  /**
   * The unique identifier of the entity being modified
   *
   * @generated from field: string entity_id = 2;
   */
  entityId: string;

  /**
   * List of patches to apply in order
   *
   * @generated from field: repeated wasmjs.v1.MessagePatch patches = 3;
   */
  patches: MessagePatch[];

  /**
   * The highest change number in this batch
   *
   * @generated from field: int64 change_number = 4;
   */
  changeNumber: bigint;

  /**
   * Source of the changes
   *
   * @generated from field: wasmjs.v1.PatchSource source = 5;
   */
  source: PatchSource;

  /**
   * Optional metadata about the batch
   *
   * @generated from field: map<string, string> metadata = 6;
   */
  metadata: { [key: string]: string };
};

/**
 * Describes the message wasmjs.v1.PatchBatch.
 * Use `create(PatchBatchSchema)` to create a new message.
 */
export const PatchBatchSchema: GenMessage<PatchBatch> = /*@__PURE__*/
  messageDesc(file_wasmjs_v1_patches, 1);

/**
 * Response message for methods that return patches
 *
 * @generated from message wasmjs.v1.PatchResponse
 */
export type PatchResponse = Message<"wasmjs.v1.PatchResponse"> & {
  /**
   * The patches to apply
   *
   * @generated from field: repeated wasmjs.v1.PatchBatch patch_batches = 1;
   */
  patchBatches: PatchBatch[];

  /**
   * Success status
   *
   * @generated from field: bool success = 2;
   */
  success: boolean;

  /**
   * Error message if success is false
   *
   * @generated from field: string error_message = 3;
   */
  errorMessage: string;

  /**
   * The new change number after applying these patches
   *
   * @generated from field: int64 new_change_number = 4;
   */
  newChangeNumber: bigint;
};

/**
 * Describes the message wasmjs.v1.PatchResponse.
 * Use `create(PatchResponseSchema)` to create a new message.
 */
export const PatchResponseSchema: GenMessage<PatchResponse> = /*@__PURE__*/
  messageDesc(file_wasmjs_v1_patches, 2);

/**
 * Patch operations for modifying protobuf message fields
 *
 * @generated from enum wasmjs.v1.PatchOperation
 */
export enum PatchOperation {
  /**
   * Set a field value (scalar, message, or replace entire field)
   *
   * @generated from enum value: SET = 0;
   */
  SET = 0,

  /**
   * Insert an item into a repeated field at a specific index
   *
   * @generated from enum value: INSERT_LIST = 1;
   */
  INSERT_LIST = 1,

  /**
   * Remove an item from a repeated field at a specific index
   *
   * @generated from enum value: REMOVE_LIST = 2;
   */
  REMOVE_LIST = 2,

  /**
   * Move an item within a repeated field from one index to another
   *
   * @generated from enum value: MOVE_LIST = 3;
   */
  MOVE_LIST = 3,

  /**
   * Insert or update a key-value pair in a map field
   *
   * @generated from enum value: INSERT_MAP = 4;
   */
  INSERT_MAP = 4,

  /**
   * Remove a key-value pair from a map field
   *
   * @generated from enum value: REMOVE_MAP = 5;
   */
  REMOVE_MAP = 5,

  /**
   * Clear all items from a repeated field
   *
   * @generated from enum value: CLEAR_LIST = 6;
   */
  CLEAR_LIST = 6,

  /**
   * Clear all key-value pairs from a map field
   *
   * @generated from enum value: CLEAR_MAP = 7;
   */
  CLEAR_MAP = 7,
}

/**
 * Describes the enum wasmjs.v1.PatchOperation.
 */
export const PatchOperationSchema: GenEnum<PatchOperation> = /*@__PURE__*/
  enumDesc(file_wasmjs_v1_patches, 0);

/**
 * Source of patch changes
 *
 * @generated from enum wasmjs.v1.PatchSource
 */
export enum PatchSource {
  /**
   * Changes originating from local user actions
   *
   * @generated from enum value: LOCAL = 0;
   */
  LOCAL = 0,

  /**
   * Changes from remote users via real-time sync
   *
   * @generated from enum value: REMOTE = 1;
   */
  REMOTE = 1,

  /**
   * Authoritative changes from the server
   *
   * @generated from enum value: SERVER = 2;
   */
  SERVER = 2,

  /**
   * Changes loaded from persistent storage
   *
   * @generated from enum value: STORAGE = 3;
   */
  STORAGE = 3,
}

/**
 * Describes the enum wasmjs.v1.PatchSource.
 */
export const PatchSourceSchema: GenEnum<PatchSource> = /*@__PURE__*/
  enumDesc(file_wasmjs_v1_patches, 1);

