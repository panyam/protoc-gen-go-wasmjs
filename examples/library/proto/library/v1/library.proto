// Copyright 2025 Sri Panyam
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//  http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package library.v1;

import "wasmjs/v1/annotations.proto";

option go_package = "github.com/panyam/protoc-gen-go-wasmjs/examples/library/gen/go/library/v1";

// Book represents a book in the library
message Book {
  string id = 1;
  string title = 2;
  string author = 3;
  string isbn = 4;
  int32 year = 5;
  string genre = 6;
  bool available = 7;
}

// User represents a library user
message User {
  string id = 1;
  string name = 2;
  string email = 3;
}

// FindBooksRequest is the request for finding books
message FindBooksRequest {
  // Search query (title, author, or ISBN)
  string query = 1;
  // Genre filter
  string genre = 2;
  // Maximum number of results
  int32 limit = 3;
  // Only show available books
  bool available_only = 4;
}

// FindBooksResponse is the response for finding books
message FindBooksResponse {
  repeated Book books = 1;
  int32 total_count = 2;
}

// CheckoutBookRequest is the request for checking out a book
message CheckoutBookRequest {
  string book_id = 1;
  string user_id = 2;
}

// CheckoutBookResponse is the response for checking out a book
message CheckoutBookResponse {
  bool success = 1;
  string message = 2;
  string due_date = 3; // ISO date string
}

// ReturnBookRequest is the request for returning a book
message ReturnBookRequest {
  string book_id = 1;
  string user_id = 2;
}

// ReturnBookResponse is the response for returning a book
message ReturnBookResponse {
  bool success = 1;
  string message = 2;
}

// GetUserBooksRequest is the request for getting user's checked out books
message GetUserBooksRequest {
  string user_id = 1;
}

// GetUserBooksResponse is the response for getting user's checked out books
message GetUserBooksResponse {
  repeated Book books = 1;
}

// LibraryService provides book management functionality
// This service demonstrates local-first architecture where the same
// service can run on a server (with full database) or in browser WASM
// (with a subset of books in memory/localStorage)
service LibraryService {
  // FindBooks searches for books by query, genre, etc.
  // Custom method name demonstrates annotation usage
  rpc FindBooks(FindBooksRequest) returns (FindBooksResponse) {
    option (wasmjs.v1.wasm_method_name) = "searchBooks";
  }

  // CheckoutBook allows a user to check out a book
  rpc CheckoutBook(CheckoutBookRequest) returns (CheckoutBookResponse);

  // ReturnBook allows a user to return a book
  rpc ReturnBook(ReturnBookRequest) returns (ReturnBookResponse);

  // GetUserBooks gets all books currently checked out by a user
  rpc GetUserBooks(GetUserBooksRequest) returns (GetUserBooksResponse);
}

// UserService provides user management functionality
service UserService {
  // GetUser retrieves user information
  rpc GetUser(GetUserRequest) returns (GetUserResponse);

  // CreateUser creates a new user account
  // This method is excluded from WASM generation as an example
  rpc CreateUser(CreateUserRequest) returns (CreateUserResponse) {
    option (wasmjs.v1.wasm_method_exclude) = true;
  }
}

// GetUserRequest is the request for getting user info
message GetUserRequest {
  string user_id = 1;
}

// GetUserResponse is the response for getting user info
message GetUserResponse {
  User user = 1;
}

// CreateUserRequest is the request for creating a user
message CreateUserRequest {
  string name = 1;
  string email = 2;
}

// CreateUserResponse is the response for creating a user
message CreateUserResponse {
  User user = 1;
}
