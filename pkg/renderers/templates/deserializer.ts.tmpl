{{/* Schema-aware deserializer template */}}
// Generated TypeScript schema-aware deserializer
// DO NOT EDIT - This file is auto-generated

import { BaseDeserializer, FactoryInterface } from "@protoc-gen-go-wasmjs/runtime";
import { {{.FactoryName}} } from "./factory";
import { {{.SchemaRegistryName}} } from "./schemas";

// Shared factory instance to avoid creating new instances on every deserializer construction
const DEFAULT_FACTORY = new {{.FactoryName}}();

/**
 * Schema-aware deserializer for {{.PackageName}} package
 * Extends BaseDeserializer with package-specific configuration
 */
export class {{.DeserializerName}} extends BaseDeserializer {
  constructor(
    schemaRegistry = {{.SchemaRegistryName}},
    factory: FactoryInterface = DEFAULT_FACTORY
  ) {
    super(schemaRegistry, factory);
  }

  /**
   * Static utility method to create and deserialize a message without needing a deserializer instance
   * @param messageType Fully qualified message type (use Class.MESSAGE_TYPE)
   * @param data Raw data to deserialize
   * @returns Deserialized instance or null if creation failed
   */
  static from<T>(messageType: string, data: any) {
    const deserializer = new {{.DeserializerName}}(); // Uses default factory and schema registry
    return deserializer.createAndDeserialize<T>(messageType, data);
  }
}
