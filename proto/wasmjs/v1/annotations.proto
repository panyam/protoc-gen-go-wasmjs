// Copyright 2025 Sri Panyam
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//  http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package wasmjs.v1;

import "google/protobuf/descriptor.proto";

option go_package = "github.com/panyam/protoc-gen-go-wasmjs/proto/gen/go/wasmjs/v1";

// wasm_method_name allows specifying a custom JavaScript method name for the WASM binding.
// This annotation provides type-safe, compile-time validation of custom method names.
//
// Example usage:
//   rpc FindBooks(FindBooksRequest) returns (FindBooksResponse) {
//     option (wasmjs.v1.wasm_method_name) = "searchBooks";
//   }
//
// The method name should follow these conventions:
// - Use camelCase (JavaScript convention)
// - Be descriptive and concise
// - Avoid spaces or special characters
// - Be unique within the service
extend google.protobuf.MethodOptions {
  string wasm_method_name = 50001;
}

// wasm_service_exclude excludes a service from WASM generation.
// Use this to skip services that shouldn't be available in the browser.
//
// Example usage:
//   service InternalService {
//     option (wasmjs.v1.wasm_service_exclude) = true;
//     rpc InternalMethod(Request) returns (Response);
//   }
extend google.protobuf.ServiceOptions {
  bool wasm_service_exclude = 50002;
}

// wasm_method_exclude excludes a method from WASM generation.
// Use this to skip methods that shouldn't be available in the browser.
//
// Example usage:
//   rpc AdminMethod(Request) returns (Response) {
//     option (wasmjs.v1.wasm_method_exclude) = true;
//   }
extend google.protobuf.MethodOptions {
  bool wasm_method_exclude = 50003;
}

// wasm_service_name allows specifying a custom JavaScript service name.
// This affects the namespaced API structure (e.g., namespace.customName.method).
//
// Example usage:
//   service LibraryService {
//     option (wasmjs.v1.wasm_service_name) = "books";
//     rpc FindBooks(FindBooksRequest) returns (FindBooksResponse);
//   }
//   // Results in: namespace.books.findBooks() instead of namespace.libraryService.findBooks()
extend google.protobuf.ServiceOptions {
  string wasm_service_name = 50004;
}

// stateful enables stateful proxy generation for a service.
// When enabled, generates a stateful proxy class that maintains local state
// and can apply differential patches for real-time collaboration.
//
// Example usage:
//   service GameService {
//     option (wasmjs.v1.stateful) = {
//       enabled: true
//       state_message_type: "example.Game"
//       conflict_resolution: CHANGE_NUMBER_BASED
//     };
//   }
extend google.protobuf.ServiceOptions {
  StatefulOptions stateful = 50005;
}

// stateful_method marks a method as returning patch operations.
// Use this for methods that return differential updates instead of full objects.
//
// Example usage:
//   rpc SubmitMoves(GameMovesRequest) returns (GamePatchResponse) {
//     option (wasmjs.v1.stateful_method) = {
//       returns_patches: true
//       broadcasts: true
//     };
//   }
extend google.protobuf.MethodOptions {
  StatefulMethodOptions stateful_method = 50006;
}

// Configuration for stateful services
message StatefulOptions {
  // Whether stateful proxy generation is enabled
  bool enabled = 1;
  
  // The fully qualified name of the message type that represents the state
  // (e.g., "example.Game", "library.Map")
  string state_message_type = 2;
  
  // Strategy for resolving conflicts when multiple changes occur
  ConflictResolution conflict_resolution = 3;
}

// Configuration for stateful methods
message StatefulMethodOptions {
  // Whether this method returns patch operations instead of full objects
  bool returns_patches = 1;
  
  // Whether changes from this method should be broadcast to other clients
  bool broadcasts = 2;
}

// Conflict resolution strategies for stateful objects
enum ConflictResolution {
  // Use change numbers to determine order (default)
  CHANGE_NUMBER_BASED = 0;
  
  // Use timestamps for ordering (requires synchronized clocks)
  TIMESTAMP_BASED = 1;
  
  // Last writer wins (simple but may lose data)
  LAST_WRITER_WINS = 2;
}

// async_method marks a method as asynchronous, requiring a callback parameter.
// This is used for methods that need to call browser APIs from WASM to avoid deadlocks.
//
// Example usage:
//   rpc GetGame(GetGameRequest) returns (GameState) {
//     option (wasmjs.v1.async_method) = {
//       is_async: true
//     };
//   }
//
// Generated TypeScript signature becomes:
//   getGame(request: GetGameRequest, callback: (response: GameState, error?: string) => void): Promise<void>
extend google.protobuf.MethodOptions {
  AsyncMethodOptions async_method = 50007;
}

// Configuration for async methods
message AsyncMethodOptions {
  // Whether this method should be generated as async with callback parameter
  bool is_async = 1;
}
